version: "4" #on wsl linux replace 3.8
name: infrastructure #on wsl linux replace with export COMPOSE_PROJECT_NAME=infrastructure before docker-compose up command

services:  

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks:
      - infrastructure-network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - 9090:9090

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    user: "472"
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/config/:/etc/grafana/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - infrastructure-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
    volumes:
      - $BASE_PATH/otel-collector/otel-config.yaml:/etc/otel/config.yaml
      - $BASE_PATH/otel-collector/log:/log/otel
    depends_on:
      - jaeger
      - loki
      - prometheus
    ports:
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus metrics exporter (scrape endpoint)
      - 13133:13133 # health_check extension
      - "55679:55679" # ZPages extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP Http receiver (Protobuf)
    networks:
      - infrastructure-network

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - COLLECTOR_OTLP_ENABLED=true
    volumes:
      - $BASE_PATH/jaeger/jaeger-ui.json:/etc/jaeger/jaeger-ui.json
    depends_on:
      - prometheus
    ports:
      - "16686:16686"
    networks:
      - infrastructure-network

  loki:
    container_name: loki
    image: grafana/loki:3.1.0
    command: -config.file=/mnt/config/loki-config.yml
    volumes:
      - $BASE_PATH/loki/loki.yml:/mnt/config/loki-config.yml
    ports:
      - "3100:3100"
    networks:
      - infrastructure-network

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - infrastructure-network

volumes:
  postgres-data:
  grafana-data:
  prometheus-data:

networks:
  infrastructure-network:
