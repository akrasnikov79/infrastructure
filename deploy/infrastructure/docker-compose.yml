version: '3.9'

services:
  postgres-container:
    container_name: postgres-container
    image: postgres:15-alpine
    restart: unless-stopped
    networks:
      - infrastructure
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - PGPORT=5433
    ports:
      - "5433:5433"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pgadmin"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: unless-stopped
    networks:
      - infrastructure
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - infrastructure
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-beelab}
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres-data:
  rabbitmq_data:
  redis-data:

networks:
  infrastructure:
    driver: bridge